CREATE TABLE IF NOT EXISTS GENRE_OF_MUSIC (
ID SERIAL PRIMARY KEY,
GENRE_NAME VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS COLLECITON (
ID SERIAL PRIMARY KEY,
COLLECTION_NAME  VARCHAR(100) NOT NULL UNIQUE,
PUBLICATION_YEAR INTEGER NOT NULL,
CHECK(PUBLICATION_YEAR > 1900 AND PUBLICATION_YEAR < 2023)
);

CREATE TABLE IF NOT EXISTS ALBUMS (
ID SERIAL PRIMARY KEY,
ALBUM_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS TRACKS (
ID SERIAL PRIMARY KEY,
ALBUM_ID INTEGER,
TRACK_NAME VARCHAR(100) NOT NULL,
DURATION INTERVAL NOT NULL,
PUBLICATION_YEAR INTEGER NOT NULL,
CHECK(PUBLICATION_YEAR > 1900 AND PUBLICATION_YEAR < 2023),
FOREIGN KEY (ALBUM_ID)  REFERENCES ALBUMS (ID)
);

CREATE TABLE IF NOT EXISTS ARTISTS_LIST (
ID SERIAL PRIMARY KEY,
SINGER_NAME VARCHAR(100) NOT NULL, 
ALIAS VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS TRACK_LIST (
COLLECTION_ID INTEGER NOT NULL,
TRACK_ID INTEGER NOT NULL,
PRIMARY KEY (COLLECTION_ID, TRACK_ID),
FOREIGN KEY (COLLECTION_ID)  REFERENCES COLLECITON (ID),
FOREIGN KEY (TRACK_ID)  REFERENCES TRACKS (ID)
);

CREATE TABLE IF NOT EXISTS GENRES_AND_ARTIST (
ARTIST_ID INTEGER NOT NULL,
GENRE_ID INTEGER NOT NULL,
PRIMARY KEY (ARTIST_ID, GENRE_ID),
FOREIGN KEY (ARTIST_ID)  REFERENCES ARTISTS_LIST (ID),
FOREIGN KEY (GENRE_ID)  REFERENCES GENRE_OF_MUSIC (ID)
);

CREATE TABLE IF NOT EXISTS ALBUMS_AND_ARTISTS (
ALBUM_ID INTEGER NOT NULL,
ARTIST_ID INTEGER NOT NULL,
PRIMARY KEY (ALBUM_ID, ARTIST_ID),
FOREIGN KEY (ALBUM_ID)  REFERENCES ALBUMS (ID),
FOREIGN KEY (ARTIST_ID)  REFERENCES ARTISTS_LIST (ID)
);
